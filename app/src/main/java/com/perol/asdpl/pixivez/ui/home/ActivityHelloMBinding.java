package com.perol.asdpl.pixivez.ui.home;

// edit from databinidng Generated by view binder compiler

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;

import androidx.annotation.LayoutRes;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.drawerlayout.widget.DrawerLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager.widget.ViewPager;

import com.google.android.material.navigation.NavigationView;
import com.google.android.material.tabs.TabLayout;
import com.perol.asdpl.pixivez.R;

import org.jetbrains.annotations.NotNull;

public final class ActivityHelloMBinding implements ViewBinding {
    @NonNull
    private final DrawerLayout rootView;

    @NonNull
    public final ViewPager contentView;

    @NonNull
    public final DrawerLayout drawerLayout;

    @NonNull
    public final NavigationView navView;

    @NonNull
    public final TabLayout tablayout;

    @NonNull
    public final Toolbar toolbar;

    private ActivityHelloMBinding(@NonNull DrawerLayout rootView, @NonNull ViewPager contentView,
                                  @NonNull DrawerLayout drawerLayout, @NonNull NavigationView navView,
                                  @NonNull TabLayout tablayout, @NonNull Toolbar toolbar) {
        this.rootView = rootView;
        this.contentView = contentView;
        this.drawerLayout = drawerLayout;
        this.navView = navView;
        this.tablayout = tablayout;
        this.toolbar = toolbar;
    }

    @Override
    @NonNull
    public DrawerLayout getRoot() {
        return rootView;
    }

    public static ActivityHelloMBinding inflate(@NotNull LayoutInflater inflater,
                                                @LayoutRes int resource) {
        View root = inflater.inflate(resource, null, false);
        return bind(root);
    }
    @NonNull
    public static ActivityHelloMBinding inflate(@NonNull LayoutInflater inflater) {
        return inflate(inflater, null, false);
    }

    @NonNull
    public static ActivityHelloMBinding inflate(@NonNull LayoutInflater inflater,
                                                @Nullable ViewGroup parent, boolean attachToParent) {
        View root = inflater.inflate(R.layout.activity_hello_m, parent, false);
        if (attachToParent) {
            parent.addView(root);
        }
        return bind(root);
    }

    @NonNull
    public static ActivityHelloMBinding bind(@NonNull View rootView) {
        // The body of this method is generated in a way you would not otherwise write.
        // This is done to optimize the compiled bytecode for size and performance.
        int id;
        missingId: {
            id = R.id.content_view;
            ViewPager contentView = ViewBindings.findChildViewById(rootView, id);
            if (contentView == null) {
                break missingId;
            }

            DrawerLayout drawerLayout = (DrawerLayout) rootView;

            id = R.id.nav_view;
            NavigationView navView = ViewBindings.findChildViewById(rootView, id);
            if (navView == null) {
                break missingId;
            }

            id = R.id.tablayout;
            TabLayout tablayout = ViewBindings.findChildViewById(rootView, id);
            if (tablayout == null) {
                break missingId;
            }

            id = R.id.toolbar;
            Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
            if (toolbar == null) {
                id = R.id.bottom_toolbar;
                toolbar = ViewBindings.findChildViewById(rootView, id);
                if (toolbar == null) {
                    break missingId;
                }
            }

            return new ActivityHelloMBinding((DrawerLayout) rootView, contentView, drawerLayout, navView,
                    tablayout, toolbar);
        }
        String missingId = rootView.getResources().getResourceName(id);
        throw new NullPointerException("Missing required view with ID: ".concat(missingId));
    }

}
